import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.HashSet;
import java.util.Set;

public class CountKeywords {
    public static void main(String[] args) {
        if (args.length != 1) {
            System.out.println("Usage: java CountKeywords <filename>");
            return;
        }

        String filename = args[0];
        File file = new File(filename);

        if (!file.exists()) {
            System.out.println("File " + filename + " does not exist");
            return;
        }

        try {
            System.out.println("The number of keywords in " + filename + " is " + countKeywords(file));
        } catch (IOException e) {
            System.out.println("Error reading file: " + e.getMessage());
        }
    }

    public static int countKeywords(File file) throws IOException {
        String[] keywordString = {"abstract", "assert", "boolean", "break", "byte", "case", "catch", "char", "class",
                "const", "continue", "default", "do", "double", "else", "enum", "extends", "final", "finally",
                "float", "for", "goto", "if", "implements", "import", "instanceof", "int", "interface", "long",
                "native", "new", "package", "private", "protected", "public", "return", "short", "static",
                "strictfp", "super", "switch", "synchronized", "this", "throw", "throws", "transient", "try",
                "void", "volatile", "while", "true", "false", "null"};

        Set<String> keywordSet = new HashSet<>();
        for (String keyword : keywordString) {
            keywordSet.add(keyword);
        }

        int count = 0;
        boolean inComment = false;
        boolean inString = false;

        try (BufferedReader br = new BufferedReader(new FileReader(file))) {
            String line;
            while ((line = br.readLine()) != null) {
                for (int i = 0; i < line.length(); i++) {
                    char c = line.charAt(i);

                    if (!inString && i < line.length() - 1 && line.charAt(i) == '/' && line.charAt(i + 1) == '/') {
                        break; // If line comment, skip rest of the line
                    }

                    if (!inString && i < line.length() - 1 && line.charAt(i) == '/' && line.charAt(i + 1) == '*') {
                        inComment = true;
                    }

                    if (inComment && i < line.length() - 1 && line.charAt(i) == '*' && line.charAt(i + 1) == '/') {
                        inComment = false;
                        i++; // Skip the closing comment symbol
                    }

                    if (c == '"') {
                        inString = !inString;
                    }

                    if (!inComment && !inString && Character.isLetter(c)) {
                        StringBuilder wordBuilder = new StringBuilder();
                        wordBuilder.append(c);

                        while (i + 1 < line.length() && (Character.isLetterOrDigit(line.charAt(i + 1)) || line.charAt(i + 1) == '_')) {
                            wordBuilder.append(line.charAt(i + 1));
                            i++;
                        }

                        String word = wordBuilder.toString();
                        if (keywordSet.contains(word)) {
                            count++;
                        }
                    }
                }
            }
        }

        return count;
    }
}
